-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GaussianBlur is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    fifo1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    fifo1_empty_n : IN STD_LOGIC;
    fifo1_read : OUT STD_LOGIC;
    fifo2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    fifo2_full_n : IN STD_LOGIC;
    fifo2_write : OUT STD_LOGIC );
end;


architecture behav of GaussianBlur is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal fifo1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_65_i_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo2_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter3_tmp_65_i_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal xi_i_reg_240 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal yi_fu_257_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal yi_reg_1285 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_65_i_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_65_i_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_65_i_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal xi_fu_269_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal line_buf_addr_reg_1299 : STD_LOGIC_VECTOR (10 downto 0);
    signal window_buf_0_3_1_reg_1305 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_6_reg_1310 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_2_1_reg_1316 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_1_6_reg_1322 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_2_1_reg_1329 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_3_1_reg_1335 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_3_2_1_reg_1341 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_0_4_reg_1347 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_gauss_2_0_2_i_fu_453_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal pix_gauss_2_0_2_i_reg_1352 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp9_fu_631_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp9_reg_1357 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp12_fu_637_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp12_reg_1362 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp13_fu_653_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp13_reg_1367 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp16_fu_659_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp16_reg_1372 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp17_fu_675_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp17_reg_1377 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_gauss_2_1_1_i_fu_843_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal pix_gauss_2_1_1_i_reg_1382 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_105_1_2_i_fu_871_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_105_1_2_i_reg_1387 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp5_fu_1039_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp5_reg_1392 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp6_fu_1064_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_reg_1397 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_fu_1102_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp10_reg_1402 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_70_i_reg_1407 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal line_buf_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buf_ce0 : STD_LOGIC;
    signal line_buf_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal line_buf_ce1 : STD_LOGIC;
    signal line_buf_we1 : STD_LOGIC;
    signal line_buf_d1 : STD_LOGIC_VECTOR (39 downto 0);
    signal yi_i_reg_229 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_66_i_fu_275_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal window_buf_0_1_fu_118 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_0_1_5_fu_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_0_2_fu_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_0_3_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_5_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_2_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_3_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_4_fu_344_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_1_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_1_5_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_2_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_3_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_4_fu_354_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_3_1_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_3_1_1_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_3_2_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_3_3_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_3_4_fu_364_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_4_1_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_4_1_1_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_4_2_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_4_3_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_i_fu_374_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_0_1_i_fu_397_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_104_0_cast_i_fu_393_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_105_0_1_cast_i_fu_405_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_gauss_2_0_1_i_fu_409_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl6_i_fu_419_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl7_i_fu_431_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl6_cast_i_fu_427_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl7_cast_i_fu_439_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_0_2_i_fu_443_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pix_gauss_2_0_1_cast_fu_415_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_105_0_2_cast_i_fu_449_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_105_1_3_i_fu_459_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_1_4_i_fu_471_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl15_i_fu_483_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl16_i_fu_495_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl15_cast_i_fu_491_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl16_cast_i_fu_503_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_2_4_i_fu_507_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_3_i_fu_517_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_105_3_1_i_fu_529_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_3_3_i_fu_541_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_3_4_i_fu_553_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_105_4_1_i_fu_569_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_i_fu_581_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl12_i_fu_593_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl11_cast_i_fu_589_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl12_cast_i_fu_601_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_4_2_i_fu_605_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_4_3_i_fu_615_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_105_4_2_cast_i_c_fu_611_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_105_2_4_cast_i_c_fu_513_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_105_3_1_cast_i_c_fu_537_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_105_1_3_cast_i_c_fu_467_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_105_3_cast_i_cas_fu_525_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_105_1_4_cast_i_c_fu_479_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp14_fu_643_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_105_3_3_cast_i_c_fu_549_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp14_cast_fu_649_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_105_4_1_cast_i_c_fu_577_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_105_3_4_cast_i_c_fu_561_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_104_4_4_cast_i_c_fu_627_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_104_4_cast_i_cas_fu_565_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp18_fu_665_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_105_4_3_cast_i_c_fu_623_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp18_cast_fu_671_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_105_0_3_i_fu_780_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_105_1_i_fu_794_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_105_0_3_cast_i_fu_787_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal pix_gauss_2_0_2_cast_fu_777_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_104_0_4_cast_i_c_fu_791_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_105_1_cast_i_cas_fu_802_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp1_fu_812_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_806_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp1_cast_fu_818_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal pix_gauss_2_1_i_fu_822_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_105_1_1_i_fu_832_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_1_1_cast_i_fu_839_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal pix_gauss_2_1_cast_i_fu_828_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl8_i_fu_849_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl9_i_fu_860_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl8_cast_i_fu_856_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl9_cast_i_fu_867_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl10_i_fu_877_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl23_i_fu_889_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl10_cast_i_fu_885_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl23_cast_i_fu_897_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_2_i_fu_901_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl21_i_fu_911_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl22_i_fu_922_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl21_cast_i_fu_918_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl22_cast_i_fu_929_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_105_2_1_i_fu_933_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl19_i_fu_943_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl20_i_fu_954_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl20_cast_i_fu_961_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl19_cast_i_fu_950_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_105_2_2_i_fu_965_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl17_i_fu_975_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl18_i_fu_986_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl17_cast_i_fu_982_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl18_cast_i_fu_993_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_105_2_3_i_fu_997_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl13_i_fu_1007_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl14_i_fu_1018_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl13_cast_i_fu_1014_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl14_cast_i_fu_1025_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_105_3_2_i_fu_1029_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_105_2_3_cast_i_c_fu_1003_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_105_2_1_cast_i_c_fu_939_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_105_2_2_cast_i_fu_971_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_105_3_2_cast_i_fu_1035_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_105_2_cast_i_cas_fu_907_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp9_cast_fu_1051_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp8_fu_1054_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp7_fu_1045_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_cast_fu_1060_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_cast_fu_1070_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp13_cast_fu_1073_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp11_fu_1076_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp16_cast_fu_1086_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp17_cast_fu_1089_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp15_fu_1092_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp11_cast_fu_1082_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp15_cast_fu_1098_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_105_1_2_cast_i_fu_1119_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal pix_gauss_2_1_1_cast_fu_1116_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_1122_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_cast_fu_1128_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_1131_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_1137_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_cast_fu_1142_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal pix_gauss_2_4_4_i_fu_1145_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component GaussianBlur_lineeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (39 downto 0) );
    end component;



begin
    line_buf_U : component GaussianBlur_lineeOg
    generic map (
        DataWidth => 40,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buf_address0,
        ce0 => line_buf_ce0,
        q0 => line_buf_q0,
        address1 => line_buf_addr_reg_1299,
        ce1 => line_buf_ce1,
        we1 => line_buf_we1,
        d1 => line_buf_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((tmp_i_fu_251_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((tmp_65_i_fu_263_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_i_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((tmp_i_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    xi_i_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                xi_i_reg_240 <= ap_const_lv11_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_65_i_fu_263_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                xi_i_reg_240 <= xi_fu_269_p2;
            end if; 
        end if;
    end process;

    yi_i_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                yi_i_reg_229 <= yi_reg_1285;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                yi_i_reg_229 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_tmp_65_i_reg_1290 <= tmp_65_i_reg_1290;
                tmp_65_i_reg_1290 <= tmp_65_i_fu_263_p2;
                window_buf_0_3_1_reg_1305 <= window_buf_0_3_fu_130;
                window_buf_1_1_6_reg_1310 <= window_buf_1_1_5_fu_138;
                window_buf_1_2_1_reg_1316 <= window_buf_1_2_fu_142;
                window_buf_2_1_6_reg_1322 <= window_buf_2_1_5_fu_154;
                window_buf_2_2_1_reg_1329 <= window_buf_2_2_fu_158;
                window_buf_2_3_1_reg_1335 <= window_buf_2_3_fu_162;
                window_buf_3_2_1_reg_1341 <= window_buf_3_2_fu_174;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_tmp_65_i_reg_1290 <= ap_reg_pp0_iter1_tmp_65_i_reg_1290;
                ap_reg_pp0_iter3_tmp_65_i_reg_1290 <= ap_reg_pp0_iter2_tmp_65_i_reg_1290;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_65_i_fu_263_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                line_buf_addr_reg_1299 <= tmp_66_i_fu_275_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_65_i_reg_1290 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                pix_gauss_2_0_2_i_reg_1352 <= pix_gauss_2_0_2_i_fu_453_p2;
                    tmp12_reg_1362(12 downto 4) <= tmp12_fu_637_p2(12 downto 4);
                    tmp13_reg_1367(12 downto 2) <= tmp13_fu_653_p2(12 downto 2);
                    tmp16_reg_1372(10 downto 2) <= tmp16_fu_659_p2(10 downto 2);
                tmp17_reg_1377 <= tmp17_fu_675_p2;
                    tmp9_reg_1357(12 downto 1) <= tmp9_fu_631_p2(12 downto 1);
                window_buf_0_4_reg_1347 <= line_buf_q0(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter1_tmp_65_i_reg_1290 = ap_const_lv1_0))) then
                pix_gauss_2_1_1_i_reg_1382 <= pix_gauss_2_1_1_i_fu_843_p2;
                tmp10_reg_1402 <= tmp10_fu_1102_p2;
                    tmp5_reg_1392(14 downto 3) <= tmp5_fu_1039_p2(14 downto 3);
                    tmp6_reg_1397(15 downto 1) <= tmp6_fu_1064_p2(15 downto 1);
                    tmp_105_1_2_i_reg_1387(13 downto 3) <= tmp_105_1_2_i_fu_871_p2(13 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter2_tmp_65_i_reg_1290 = ap_const_lv1_0))) then
                tmp_70_i_reg_1407 <= pix_gauss_2_4_4_i_fu_1145_p2(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_65_i_reg_1290 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                window_buf_0_1_5_fu_122 <= window_buf_0_2_fu_126;
                window_buf_0_1_fu_118 <= window_buf_0_1_5_fu_122;
                window_buf_0_2_fu_126 <= window_buf_0_3_fu_130;
                window_buf_0_3_fu_130 <= line_buf_q0(15 downto 8);
                window_buf_1_1_5_fu_138 <= window_buf_1_2_fu_142;
                window_buf_1_2_fu_142 <= window_buf_1_3_fu_146;
                window_buf_1_3_fu_146 <= line_buf_q0(23 downto 16);
                window_buf_2_1_5_fu_154 <= window_buf_2_2_fu_158;
                window_buf_2_2_fu_158 <= window_buf_2_3_fu_162;
                window_buf_2_3_fu_162 <= line_buf_q0(31 downto 24);
                window_buf_3_1_1_fu_170 <= window_buf_3_2_fu_174;
                window_buf_3_1_fu_166 <= window_buf_3_1_1_fu_170;
                window_buf_3_2_fu_174 <= window_buf_3_3_fu_178;
                window_buf_3_3_fu_178 <= line_buf_q0(39 downto 32);
                window_buf_4_1_1_fu_186 <= window_buf_4_2_fu_190;
                window_buf_4_1_fu_182 <= window_buf_4_1_1_fu_186;
                window_buf_4_2_fu_190 <= window_buf_4_3_fu_194;
                window_buf_4_3_fu_194 <= fifo1_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter1_tmp_65_i_reg_1290 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                window_buf_1_1_fu_134 <= window_buf_1_1_6_reg_1310;
                window_buf_2_1_fu_150 <= window_buf_2_1_6_reg_1322;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                yi_reg_1285 <= yi_fu_257_p2;
            end if;
        end if;
    end process;
    tmp9_reg_1357(0) <= '0';
    tmp12_reg_1362(3 downto 0) <= "0000";
    tmp13_reg_1367(1 downto 0) <= "00";
    tmp16_reg_1372(1 downto 0) <= "00";
    tmp_105_1_2_i_reg_1387(2 downto 0) <= "000";
    tmp5_reg_1392(2 downto 0) <= "000";
    tmp6_reg_1397(0) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, tmp_i_fu_251_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_i_fu_251_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state8 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(fifo1_empty_n, fifo2_full_n, ap_enable_reg_pp0_iter1, tmp_65_i_reg_1290, ap_enable_reg_pp0_iter4, ap_reg_pp0_iter3_tmp_65_i_reg_1290)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_reg_pp0_iter3_tmp_65_i_reg_1290 = ap_const_lv1_0) and (fifo2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((tmp_65_i_reg_1290 = ap_const_lv1_0) and (fifo1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(fifo1_empty_n, fifo2_full_n, ap_enable_reg_pp0_iter1, tmp_65_i_reg_1290, ap_enable_reg_pp0_iter4, ap_reg_pp0_iter3_tmp_65_i_reg_1290)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_reg_pp0_iter3_tmp_65_i_reg_1290 = ap_const_lv1_0) and (fifo2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((tmp_65_i_reg_1290 = ap_const_lv1_0) and (fifo1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo1_empty_n, fifo2_full_n, ap_enable_reg_pp0_iter1, tmp_65_i_reg_1290, ap_enable_reg_pp0_iter4, ap_reg_pp0_iter3_tmp_65_i_reg_1290)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_reg_pp0_iter3_tmp_65_i_reg_1290 = ap_const_lv1_0) and (fifo2_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((tmp_65_i_reg_1290 = ap_const_lv1_0) and (fifo1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(fifo1_empty_n, tmp_65_i_reg_1290)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((tmp_65_i_reg_1290 = ap_const_lv1_0) and (fifo1_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter4_assign_proc : process(fifo2_full_n, ap_reg_pp0_iter3_tmp_65_i_reg_1290)
    begin
                ap_block_state7_pp0_stage0_iter4 <= ((ap_reg_pp0_iter3_tmp_65_i_reg_1290 = ap_const_lv1_0) and (fifo2_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, tmp_i_fu_251_p2, ap_CS_fsm_state2)
    begin
        if (((tmp_i_fu_251_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    fifo1_blk_n_assign_proc : process(fifo1_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_65_i_reg_1290)
    begin
        if (((tmp_65_i_reg_1290 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo1_blk_n <= fifo1_empty_n;
        else 
            fifo1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_65_i_reg_1290, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_65_i_reg_1290 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo1_read <= ap_const_logic_1;
        else 
            fifo1_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo2_blk_n_assign_proc : process(fifo2_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, ap_reg_pp0_iter3_tmp_65_i_reg_1290)
    begin
        if (((ap_reg_pp0_iter3_tmp_65_i_reg_1290 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            fifo2_blk_n <= fifo2_full_n;
        else 
            fifo2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo2_din <= tmp_70_i_reg_1407;

    fifo2_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_reg_pp0_iter3_tmp_65_i_reg_1290, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter3_tmp_65_i_reg_1290 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            fifo2_write <= ap_const_logic_1;
        else 
            fifo2_write <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(tmp_i_fu_251_p2, ap_CS_fsm_state2)
    begin
        if (((tmp_i_fu_251_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    line_buf_address0 <= tmp_66_i_fu_275_p1(11 - 1 downto 0);

    line_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            line_buf_ce0 <= ap_const_logic_1;
        else 
            line_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buf_ce1 <= ap_const_logic_1;
        else 
            line_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buf_d1 <= (fifo1_dout & tmp_31_i_fu_374_p4);

    line_buf_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_65_i_reg_1290, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_65_i_reg_1290 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buf_we1 <= ap_const_logic_1;
        else 
            line_buf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl10_cast_i_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl10_i_fu_877_p3),12));
    p_shl10_i_fu_877_p3 <= (window_buf_2_1_fu_150 & ap_const_lv3_0);
    p_shl11_cast_i_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl11_i_fu_581_p3),12));
    p_shl11_i_fu_581_p3 <= (window_buf_4_2_fu_190 & ap_const_lv3_0);
    p_shl12_cast_i_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl12_i_fu_593_p3),12));
    p_shl12_i_fu_593_p3 <= (window_buf_4_2_fu_190 & ap_const_lv1_0);
    p_shl13_cast_i_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_i_fu_1007_p3),14));
    p_shl13_i_fu_1007_p3 <= (window_buf_3_2_1_reg_1341 & ap_const_lv5_0);
    p_shl14_cast_i_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl14_i_fu_1018_p3),14));
    p_shl14_i_fu_1018_p3 <= (window_buf_3_2_1_reg_1341 & ap_const_lv3_0);
    p_shl15_cast_i_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl15_i_fu_483_p3),12));
    p_shl15_i_fu_483_p3 <= (window_buf_2_4_fu_354_p4 & ap_const_lv3_0);
    p_shl16_cast_i_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl16_i_fu_495_p3),12));
    p_shl16_i_fu_495_p3 <= (window_buf_2_4_fu_354_p4 & ap_const_lv1_0);
    p_shl17_cast_i_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl17_i_fu_975_p3),14));
    p_shl17_i_fu_975_p3 <= (window_buf_2_3_1_reg_1335 & ap_const_lv5_0);
    p_shl18_cast_i_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl18_i_fu_986_p3),14));
    p_shl18_i_fu_986_p3 <= (window_buf_2_3_1_reg_1335 & ap_const_lv3_0);
    p_shl19_cast_i_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl19_i_fu_943_p3),14));
    p_shl19_i_fu_943_p3 <= (window_buf_2_2_1_reg_1329 & ap_const_lv5_0);
    p_shl20_cast_i_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl20_i_fu_954_p3),14));
    p_shl20_i_fu_954_p3 <= (window_buf_2_2_1_reg_1329 & ap_const_lv2_0);
    p_shl21_cast_i_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl21_i_fu_911_p3),14));
    p_shl21_i_fu_911_p3 <= (window_buf_2_1_6_reg_1322 & ap_const_lv5_0);
    p_shl22_cast_i_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl22_i_fu_922_p3),14));
    p_shl22_i_fu_922_p3 <= (window_buf_2_1_6_reg_1322 & ap_const_lv3_0);
    p_shl23_cast_i_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl23_i_fu_889_p3),12));
    p_shl23_i_fu_889_p3 <= (window_buf_2_1_fu_150 & ap_const_lv1_0);
    p_shl6_cast_i_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl6_i_fu_419_p3),12));
    p_shl6_i_fu_419_p3 <= (window_buf_0_2_fu_126 & ap_const_lv3_0);
    p_shl7_cast_i_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl7_i_fu_431_p3),12));
    p_shl7_i_fu_431_p3 <= (window_buf_0_2_fu_126 & ap_const_lv1_0);
    p_shl8_cast_i_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl8_i_fu_849_p3),14));
    p_shl8_i_fu_849_p3 <= (window_buf_1_2_1_reg_1316 & ap_const_lv5_0);
    p_shl9_cast_i_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl9_i_fu_860_p3),14));
    p_shl9_i_fu_860_p3 <= (window_buf_1_2_1_reg_1316 & ap_const_lv3_0);
    pix_gauss_2_0_1_cast_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pix_gauss_2_0_1_i_fu_409_p2),13));
    pix_gauss_2_0_1_i_fu_409_p2 <= std_logic_vector(unsigned(tmp_104_0_cast_i_fu_393_p1) + unsigned(tmp_105_0_1_cast_i_fu_405_p1));
        pix_gauss_2_0_2_cast_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pix_gauss_2_0_2_i_reg_1352),14));

    pix_gauss_2_0_2_i_fu_453_p2 <= std_logic_vector(unsigned(pix_gauss_2_0_1_cast_fu_415_p1) + unsigned(tmp_105_0_2_cast_i_fu_449_p1));
        pix_gauss_2_1_1_cast_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pix_gauss_2_1_1_i_reg_1382),16));

    pix_gauss_2_1_1_i_fu_843_p2 <= std_logic_vector(unsigned(tmp_105_1_1_cast_i_fu_839_p1) + unsigned(pix_gauss_2_1_cast_i_fu_828_p1));
        pix_gauss_2_1_cast_i_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pix_gauss_2_1_i_fu_822_p2),15));

    pix_gauss_2_1_i_fu_822_p2 <= std_logic_vector(unsigned(tmp_fu_806_p2) + unsigned(tmp1_cast_fu_818_p1));
    pix_gauss_2_4_4_i_fu_1145_p2 <= std_logic_vector(unsigned(tmp2_fu_1137_p2) + unsigned(tmp10_cast_fu_1142_p1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_cast_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp10_reg_1402),16));
    tmp10_fu_1102_p2 <= std_logic_vector(unsigned(tmp11_cast_fu_1082_p1) + unsigned(tmp15_cast_fu_1098_p1));
    tmp11_cast_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp11_fu_1076_p2),15));
    tmp11_fu_1076_p2 <= std_logic_vector(unsigned(tmp12_cast_fu_1070_p1) + unsigned(tmp13_cast_fu_1073_p1));
    tmp12_cast_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp12_reg_1362),14));
    tmp12_fu_637_p2 <= std_logic_vector(unsigned(tmp_105_3_1_cast_i_c_fu_537_p1) + unsigned(tmp_105_1_3_cast_i_c_fu_467_p1));
    tmp13_cast_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp13_reg_1367),14));
    tmp13_fu_653_p2 <= std_logic_vector(unsigned(tmp_105_3_3_cast_i_c_fu_549_p1) + unsigned(tmp14_cast_fu_649_p1));
    tmp14_cast_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp14_fu_643_p2),13));
    tmp14_fu_643_p2 <= std_logic_vector(unsigned(tmp_105_3_cast_i_cas_fu_525_p1) + unsigned(tmp_105_1_4_cast_i_c_fu_479_p1));
    tmp15_cast_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp15_fu_1092_p2),15));
    tmp15_fu_1092_p2 <= std_logic_vector(unsigned(tmp16_cast_fu_1086_p1) + unsigned(tmp17_cast_fu_1089_p1));
    tmp16_cast_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp16_reg_1372),12));
    tmp16_fu_659_p2 <= std_logic_vector(unsigned(tmp_105_4_1_cast_i_c_fu_577_p1) + unsigned(tmp_105_3_4_cast_i_c_fu_561_p1));
    tmp17_cast_fu_1089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp17_reg_1377),12));
    tmp17_fu_675_p2 <= std_logic_vector(unsigned(tmp_105_4_3_cast_i_c_fu_623_p1) + unsigned(tmp18_cast_fu_671_p1));
    tmp18_cast_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp18_fu_665_p2),11));
    tmp18_fu_665_p2 <= std_logic_vector(unsigned(tmp_104_4_4_cast_i_c_fu_627_p1) + unsigned(tmp_104_4_cast_i_cas_fu_565_p1));
    tmp1_cast_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_812_p2),14));
    tmp1_fu_812_p2 <= std_logic_vector(unsigned(tmp_104_0_4_cast_i_c_fu_791_p1) + unsigned(tmp_105_1_cast_i_cas_fu_802_p1));
    tmp2_fu_1137_p2 <= std_logic_vector(unsigned(tmp3_fu_1131_p2) + unsigned(tmp6_reg_1397));
    tmp3_fu_1131_p2 <= std_logic_vector(unsigned(tmp4_fu_1122_p2) + unsigned(tmp5_cast_fu_1128_p1));
    tmp4_fu_1122_p2 <= std_logic_vector(signed(tmp_105_1_2_cast_i_fu_1119_p1) + signed(pix_gauss_2_1_1_cast_fu_1116_p1));
        tmp5_cast_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp5_reg_1392),16));

    tmp5_fu_1039_p2 <= std_logic_vector(signed(tmp_105_2_3_cast_i_c_fu_1003_p1) + signed(tmp_105_2_1_cast_i_c_fu_939_p1));
    tmp6_fu_1064_p2 <= std_logic_vector(unsigned(tmp7_fu_1045_p2) + unsigned(tmp8_cast_fu_1060_p1));
    tmp7_fu_1045_p2 <= std_logic_vector(unsigned(tmp_105_2_2_cast_i_fu_971_p1) + unsigned(tmp_105_3_2_cast_i_fu_1035_p1));
        tmp8_cast_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp8_fu_1054_p2),16));

    tmp8_fu_1054_p2 <= std_logic_vector(signed(tmp_105_2_cast_i_cas_fu_907_p1) + signed(tmp9_cast_fu_1051_p1));
        tmp9_cast_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp9_reg_1357),14));

    tmp9_fu_631_p2 <= std_logic_vector(signed(tmp_105_4_2_cast_i_c_fu_611_p1) + signed(tmp_105_2_4_cast_i_c_fu_513_p1));
    tmp_104_0_4_cast_i_c_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_0_4_reg_1347),11));
    tmp_104_0_cast_i_fu_393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_0_1_fu_118),11));
    tmp_104_4_4_cast_i_c_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fifo1_dout),9));
    tmp_104_4_cast_i_cas_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_4_1_fu_182),9));
    tmp_105_0_1_cast_i_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_0_1_i_fu_397_p3),11));
    tmp_105_0_1_i_fu_397_p3 <= (window_buf_0_1_5_fu_122 & ap_const_lv2_0);
        tmp_105_0_2_cast_i_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_0_2_i_fu_443_p2),13));

    tmp_105_0_2_i_fu_443_p2 <= std_logic_vector(unsigned(p_shl6_cast_i_fu_427_p1) - unsigned(p_shl7_cast_i_fu_439_p1));
    tmp_105_0_3_cast_i_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_0_3_i_fu_780_p3),14));
    tmp_105_0_3_i_fu_780_p3 <= (window_buf_0_3_1_reg_1305 & ap_const_lv2_0);
    tmp_105_1_1_cast_i_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_1_1_i_fu_832_p3),15));
    tmp_105_1_1_i_fu_832_p3 <= (window_buf_1_1_6_reg_1310 & ap_const_lv4_0);
        tmp_105_1_2_cast_i_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_1_2_i_reg_1387),16));

    tmp_105_1_2_i_fu_871_p2 <= std_logic_vector(unsigned(p_shl8_cast_i_fu_856_p1) - unsigned(p_shl9_cast_i_fu_867_p1));
    tmp_105_1_3_cast_i_c_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_1_3_i_fu_459_p3),13));
    tmp_105_1_3_i_fu_459_p3 <= (window_buf_1_3_fu_146 & ap_const_lv4_0);
    tmp_105_1_4_cast_i_c_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_1_4_i_fu_471_p3),11));
    tmp_105_1_4_i_fu_471_p3 <= (window_buf_1_4_fu_344_p4 & ap_const_lv2_0);
    tmp_105_1_cast_i_cas_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_1_i_fu_794_p3),11));
    tmp_105_1_i_fu_794_p3 <= (window_buf_1_1_fu_134 & ap_const_lv2_0);
        tmp_105_2_1_cast_i_c_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_2_1_i_fu_933_p2),15));

    tmp_105_2_1_i_fu_933_p2 <= std_logic_vector(unsigned(p_shl21_cast_i_fu_918_p1) - unsigned(p_shl22_cast_i_fu_929_p1));
    tmp_105_2_2_cast_i_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_2_2_i_fu_965_p2),16));
    tmp_105_2_2_i_fu_965_p2 <= std_logic_vector(unsigned(p_shl20_cast_i_fu_961_p1) + unsigned(p_shl19_cast_i_fu_950_p1));
        tmp_105_2_3_cast_i_c_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_2_3_i_fu_997_p2),15));

    tmp_105_2_3_i_fu_997_p2 <= std_logic_vector(unsigned(p_shl17_cast_i_fu_982_p1) - unsigned(p_shl18_cast_i_fu_993_p1));
        tmp_105_2_4_cast_i_c_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_2_4_i_fu_507_p2),13));

    tmp_105_2_4_i_fu_507_p2 <= std_logic_vector(unsigned(p_shl15_cast_i_fu_491_p1) - unsigned(p_shl16_cast_i_fu_503_p1));
        tmp_105_2_cast_i_cas_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_2_i_fu_901_p2),14));

    tmp_105_2_i_fu_901_p2 <= std_logic_vector(unsigned(p_shl10_cast_i_fu_885_p1) - unsigned(p_shl23_cast_i_fu_897_p1));
    tmp_105_3_1_cast_i_c_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_3_1_i_fu_529_p3),13));
    tmp_105_3_1_i_fu_529_p3 <= (window_buf_3_1_1_fu_170 & ap_const_lv4_0);
        tmp_105_3_2_cast_i_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_3_2_i_fu_1029_p2),16));

    tmp_105_3_2_i_fu_1029_p2 <= std_logic_vector(unsigned(p_shl13_cast_i_fu_1014_p1) - unsigned(p_shl14_cast_i_fu_1025_p1));
    tmp_105_3_3_cast_i_c_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_3_3_i_fu_541_p3),13));
    tmp_105_3_3_i_fu_541_p3 <= (window_buf_3_3_fu_178 & ap_const_lv4_0);
    tmp_105_3_4_cast_i_c_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_3_4_i_fu_553_p3),11));
    tmp_105_3_4_i_fu_553_p3 <= (window_buf_3_4_fu_364_p4 & ap_const_lv2_0);
    tmp_105_3_cast_i_cas_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_3_i_fu_517_p3),11));
    tmp_105_3_i_fu_517_p3 <= (window_buf_3_1_fu_166 & ap_const_lv2_0);
    tmp_105_4_1_cast_i_c_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_4_1_i_fu_569_p3),11));
    tmp_105_4_1_i_fu_569_p3 <= (window_buf_4_1_1_fu_186 & ap_const_lv2_0);
        tmp_105_4_2_cast_i_c_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_4_2_i_fu_605_p2),13));

    tmp_105_4_2_i_fu_605_p2 <= std_logic_vector(unsigned(p_shl11_cast_i_fu_589_p1) - unsigned(p_shl12_cast_i_fu_601_p1));
    tmp_105_4_3_cast_i_c_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_4_3_i_fu_615_p3),11));
    tmp_105_4_3_i_fu_615_p3 <= (window_buf_4_3_fu_194 & ap_const_lv2_0);
    tmp_31_i_fu_374_p4 <= line_buf_q0(39 downto 8);
    tmp_65_i_fu_263_p2 <= "1" when (xi_i_reg_240 = ap_const_lv11_500) else "0";
    tmp_66_i_fu_275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xi_i_reg_240),64));
    tmp_fu_806_p2 <= std_logic_vector(unsigned(tmp_105_0_3_cast_i_fu_787_p1) + unsigned(pix_gauss_2_0_2_cast_fu_777_p1));
    tmp_i_fu_251_p2 <= "1" when (yi_i_reg_229 = ap_const_lv10_2D0) else "0";
    window_buf_1_4_fu_344_p4 <= line_buf_q0(23 downto 16);
    window_buf_2_4_fu_354_p4 <= line_buf_q0(31 downto 24);
    window_buf_3_4_fu_364_p4 <= line_buf_q0(39 downto 32);
    xi_fu_269_p2 <= std_logic_vector(unsigned(xi_i_reg_240) + unsigned(ap_const_lv11_1));
    yi_fu_257_p2 <= std_logic_vector(unsigned(yi_i_reg_229) + unsigned(ap_const_lv10_1));
end behav;
