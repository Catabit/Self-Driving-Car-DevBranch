-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Sobel_1280u_720u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    fifo2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    fifo2_empty_n : IN STD_LOGIC;
    fifo2_read : OUT STD_LOGIC;
    fifo3_value_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    fifo3_value_full_n : IN STD_LOGIC;
    fifo3_value_write : OUT STD_LOGIC;
    fifo3_grad_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    fifo3_grad_full_n : IN STD_LOGIC;
    fifo3_grad_write : OUT STD_LOGIC );
end;


architecture behav of Sobel_1280u_720u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv10_2CD : STD_LOGIC_VECTOR (9 downto 0) := "1011001101";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_4FD : STD_LOGIC_VECTOR (10 downto 0) := "10011111101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_FFFFFD96 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110110010110";
    constant ap_const_lv32_FFFFFF97 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111110010111";
    constant ap_const_lv32_FFFFFF96 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111110010110";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_26A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001101010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal fifo2_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo3_value_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter26_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo3_grad_blk_n : STD_LOGIC;
    signal xi_i_reg_256 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal yi_fu_292_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal yi_reg_963 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp3_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_reg_968 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter16_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter17_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter18_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter19_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter20_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter21_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter22_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter23_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter24_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter25_tmp_3_i_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal xi_fu_332_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal line_buf_addr_reg_982 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_cond3_i_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter16_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter17_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter18_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter19_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter20_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter21_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter22_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter23_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter24_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter25_or_cond3_i_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal window_buf_2_1_2_reg_992 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_2_reg_998 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_2_reg_1003 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_h_sobel_2_1_1_i_fu_460_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_h_sobel_2_1_1_i_reg_1008 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_v_sobel_2_1_2_i_fu_488_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal pix_v_sobel_2_1_2_i_reg_1013 : STD_LOGIC_VECTOR (9 downto 0);
    signal pix_h_sobel_2_2_2_i_fu_551_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_h_sobel_2_2_2_i_reg_1018 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_v_sobel_2_2_2_i_fu_583_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_v_sobel_2_2_2_i_reg_1024 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_pp0_iter3_pix_v_sobel_2_2_2_i_reg_1024 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_i_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter16_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter17_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter18_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter19_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter20_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter21_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter22_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter23_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter24_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter25_tmp_16_i_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_i_fu_910_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_10_i_reg_1034 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_916_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_12_i_reg_1049 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal grp_fu_278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_1059 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_2_reg_1064 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_1069 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_fu_750_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_reg_1074 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_i_fu_789_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_i_reg_1080 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter25_tmp_28_i_reg_1080 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter26_tmp_28_i_reg_1080 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_int_fu_797_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal line_buf_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buf_ce0 : STD_LOGIC;
    signal line_buf_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buf_ce1 : STD_LOGIC;
    signal line_buf_we1 : STD_LOGIC;
    signal line_buf_d1 : STD_LOGIC_VECTOR (23 downto 0);
    signal yi_i_reg_245 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_phi_reg_pp0_iter0_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter22_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter23_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter24_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter25_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter26_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter27_t_int1_i_reg_267 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_i_fu_338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal window_buf_0_1_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_0_1_1_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_0_2_fu_391_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_1_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_1_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_1_1_fu_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_278_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_298_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_343_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp8_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_fu_411_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_0_cast10_i_ca_fu_430_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_0_2_cast9_i_c_fu_434_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal pix_h_sobel_2_0_2_i_fu_438_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_1_i_fu_448_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_1_cast_i_fu_456_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_h_sobel_2_0_2_ca_fu_444_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_0_1_i_fu_466_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_478_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_cast_fu_484_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_30_0_1_cast_i_fu_474_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl2_i_fu_522_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_cast_i_fu_529_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_h_sobel_2_1_2_i_fu_533_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_2_cast_i_fu_538_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_h_sobel_2_2_1_i_fu_542_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_2_2_cast_i_fu_548_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_v_sobel_2_1_2_ca_fu_557_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl3_i_fu_566_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pix_v_sobel_2_2_i_fu_560_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl3_cast_i_fu_573_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_v_sobel_2_2_1_i_fu_577_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_tr_i_fu_602_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_616_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_1_fu_629_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_1_fu_650_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_79_i_i_i_i_fu_654_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_fu_640_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i_cast_i_fu_668_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_672_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_80_i_i_i_i_fu_686_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_678_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_i_i_i_cast_i_fu_692_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_fu_696_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_i_i_i_ca_fu_704_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_i_i_i_ca_1_fu_708_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_79_i_i_i_cast8_i_fu_664_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_81_i_i_i_i_fu_712_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_82_i_i_i_i_fu_716_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_8_fu_728_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_i_i_i_i_fu_722_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_4_fu_736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_740_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_i_i_i_i_fu_758_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_763_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_769_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp5_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_785_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_616_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_19_i_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_i_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_i_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_i_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_demorgan_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp2_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_cast_fu_887_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grad_sobel_i_fu_849_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_i_fu_910_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_h_sobel_2_2_2_ca_fu_599_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_10_i_fu_910_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_916_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal pix_v_sobel_2_2_2_ca_fu_622_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_916_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_278_ce : STD_LOGIC;
    signal grp_fu_281_ce : STD_LOGIC;
    signal grp_fu_616_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component canny_edge_detectg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component canny_edge_detecthbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component canny_edge_detectibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component canny_edge_detectjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component canny_edge_detectkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component Sobel_1280u_720u_fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    line_buf_U : component Sobel_1280u_720u_fYi
    generic map (
        DataWidth => 24,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buf_address0,
        ce0 => line_buf_ce0,
        q0 => line_buf_q0,
        address1 => line_buf_addr_reg_982,
        ce1 => line_buf_ce1,
        we1 => line_buf_we1,
        d1 => line_buf_d1);

    canny_edge_detectg8j_U18 : component canny_edge_detectg8j
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_278_p0,
        ce => grp_fu_278_ce,
        dout => grp_fu_278_p1);

    canny_edge_detecthbi_U19 : component canny_edge_detecthbi
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => x_assign_reg_1059,
        ce => grp_fu_281_ce,
        dout => grp_fu_281_p2);

    canny_edge_detectibs_U20 : component canny_edge_detectibs
    generic map (
        ID => 1,
        NUM_STAGE => 24,
        din0_WIDTH => 20,
        din1_WIDTH => 11,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_616_p0,
        din1 => pix_h_sobel_2_2_2_i_reg_1018,
        ce => grp_fu_616_ce,
        dout => grp_fu_616_p2);

    canny_edge_detectjbC_U21 : component canny_edge_detectjbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 22)
    port map (
        din0 => tmp_10_i_fu_910_p0,
        din1 => tmp_10_i_fu_910_p1,
        dout => tmp_10_i_fu_910_p2);

    canny_edge_detectkbM_U22 : component canny_edge_detectkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_916_p0,
        din1 => grp_fu_916_p1,
        din2 => tmp_10_i_reg_1034,
        dout => grp_fu_916_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((tmp_i_fu_286_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((tmp_3_i_fu_326_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_i_fu_286_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                elsif (((tmp_i_fu_286_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter27_t_int1_i_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter26 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_reg_pp0_iter25_tmp_16_i_reg_1030 = ap_const_lv1_0) and (ap_reg_pp0_iter25_tmp_3_i_reg_973 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter27_t_int1_i_reg_267 <= t_int_fu_797_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter27_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter26_t_int1_i_reg_267;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_t_int1_i_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((tmp_16_i_fu_589_p2 = ap_const_lv1_1) and (ap_reg_pp0_iter1_tmp_3_i_reg_973 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_t_int1_i_reg_267 <= ap_const_lv32_7FFFFFFF;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter2_t_int1_i_reg_267;
                end if;
            end if; 
        end if;
    end process;

    xi_i_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_i_fu_326_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                xi_i_reg_256 <= xi_fu_332_p2;
            elsif (((tmp_i_fu_286_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                xi_i_reg_256 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    yi_i_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                yi_i_reg_245 <= yi_reg_963;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                yi_i_reg_245 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter10_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter9_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter11_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter10_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter12_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter11_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter13_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter12_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter14_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter13_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter15_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter14_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter16_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter15_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter17_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter16_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter18_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter17_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter19_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter18_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter0_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter20_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter19_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter21_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter20_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter22_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter21_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter23_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter22_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter24_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter23_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter25_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter24_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter26_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter25_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter1_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter3_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter4_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter5_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter6_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter7_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter9_t_int1_i_reg_267 <= ap_phi_reg_pp0_iter8_t_int1_i_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_or_cond3_i_reg_988 <= ap_reg_pp0_iter9_or_cond3_i_reg_988;
                ap_reg_pp0_iter10_tmp_16_i_reg_1030 <= ap_reg_pp0_iter9_tmp_16_i_reg_1030;
                ap_reg_pp0_iter10_tmp_3_i_reg_973 <= ap_reg_pp0_iter9_tmp_3_i_reg_973;
                ap_reg_pp0_iter11_or_cond3_i_reg_988 <= ap_reg_pp0_iter10_or_cond3_i_reg_988;
                ap_reg_pp0_iter11_tmp_16_i_reg_1030 <= ap_reg_pp0_iter10_tmp_16_i_reg_1030;
                ap_reg_pp0_iter11_tmp_3_i_reg_973 <= ap_reg_pp0_iter10_tmp_3_i_reg_973;
                ap_reg_pp0_iter12_or_cond3_i_reg_988 <= ap_reg_pp0_iter11_or_cond3_i_reg_988;
                ap_reg_pp0_iter12_tmp_16_i_reg_1030 <= ap_reg_pp0_iter11_tmp_16_i_reg_1030;
                ap_reg_pp0_iter12_tmp_3_i_reg_973 <= ap_reg_pp0_iter11_tmp_3_i_reg_973;
                ap_reg_pp0_iter13_or_cond3_i_reg_988 <= ap_reg_pp0_iter12_or_cond3_i_reg_988;
                ap_reg_pp0_iter13_tmp_16_i_reg_1030 <= ap_reg_pp0_iter12_tmp_16_i_reg_1030;
                ap_reg_pp0_iter13_tmp_3_i_reg_973 <= ap_reg_pp0_iter12_tmp_3_i_reg_973;
                ap_reg_pp0_iter14_or_cond3_i_reg_988 <= ap_reg_pp0_iter13_or_cond3_i_reg_988;
                ap_reg_pp0_iter14_tmp_16_i_reg_1030 <= ap_reg_pp0_iter13_tmp_16_i_reg_1030;
                ap_reg_pp0_iter14_tmp_3_i_reg_973 <= ap_reg_pp0_iter13_tmp_3_i_reg_973;
                ap_reg_pp0_iter15_or_cond3_i_reg_988 <= ap_reg_pp0_iter14_or_cond3_i_reg_988;
                ap_reg_pp0_iter15_tmp_16_i_reg_1030 <= ap_reg_pp0_iter14_tmp_16_i_reg_1030;
                ap_reg_pp0_iter15_tmp_3_i_reg_973 <= ap_reg_pp0_iter14_tmp_3_i_reg_973;
                ap_reg_pp0_iter16_or_cond3_i_reg_988 <= ap_reg_pp0_iter15_or_cond3_i_reg_988;
                ap_reg_pp0_iter16_tmp_16_i_reg_1030 <= ap_reg_pp0_iter15_tmp_16_i_reg_1030;
                ap_reg_pp0_iter16_tmp_3_i_reg_973 <= ap_reg_pp0_iter15_tmp_3_i_reg_973;
                ap_reg_pp0_iter17_or_cond3_i_reg_988 <= ap_reg_pp0_iter16_or_cond3_i_reg_988;
                ap_reg_pp0_iter17_tmp_16_i_reg_1030 <= ap_reg_pp0_iter16_tmp_16_i_reg_1030;
                ap_reg_pp0_iter17_tmp_3_i_reg_973 <= ap_reg_pp0_iter16_tmp_3_i_reg_973;
                ap_reg_pp0_iter18_or_cond3_i_reg_988 <= ap_reg_pp0_iter17_or_cond3_i_reg_988;
                ap_reg_pp0_iter18_tmp_16_i_reg_1030 <= ap_reg_pp0_iter17_tmp_16_i_reg_1030;
                ap_reg_pp0_iter18_tmp_3_i_reg_973 <= ap_reg_pp0_iter17_tmp_3_i_reg_973;
                ap_reg_pp0_iter19_or_cond3_i_reg_988 <= ap_reg_pp0_iter18_or_cond3_i_reg_988;
                ap_reg_pp0_iter19_tmp_16_i_reg_1030 <= ap_reg_pp0_iter18_tmp_16_i_reg_1030;
                ap_reg_pp0_iter19_tmp_3_i_reg_973 <= ap_reg_pp0_iter18_tmp_3_i_reg_973;
                ap_reg_pp0_iter20_or_cond3_i_reg_988 <= ap_reg_pp0_iter19_or_cond3_i_reg_988;
                ap_reg_pp0_iter20_tmp_16_i_reg_1030 <= ap_reg_pp0_iter19_tmp_16_i_reg_1030;
                ap_reg_pp0_iter20_tmp_3_i_reg_973 <= ap_reg_pp0_iter19_tmp_3_i_reg_973;
                ap_reg_pp0_iter21_or_cond3_i_reg_988 <= ap_reg_pp0_iter20_or_cond3_i_reg_988;
                ap_reg_pp0_iter21_tmp_16_i_reg_1030 <= ap_reg_pp0_iter20_tmp_16_i_reg_1030;
                ap_reg_pp0_iter21_tmp_3_i_reg_973 <= ap_reg_pp0_iter20_tmp_3_i_reg_973;
                ap_reg_pp0_iter22_or_cond3_i_reg_988 <= ap_reg_pp0_iter21_or_cond3_i_reg_988;
                ap_reg_pp0_iter22_tmp_16_i_reg_1030 <= ap_reg_pp0_iter21_tmp_16_i_reg_1030;
                ap_reg_pp0_iter22_tmp_3_i_reg_973 <= ap_reg_pp0_iter21_tmp_3_i_reg_973;
                ap_reg_pp0_iter23_or_cond3_i_reg_988 <= ap_reg_pp0_iter22_or_cond3_i_reg_988;
                ap_reg_pp0_iter23_tmp_16_i_reg_1030 <= ap_reg_pp0_iter22_tmp_16_i_reg_1030;
                ap_reg_pp0_iter23_tmp_3_i_reg_973 <= ap_reg_pp0_iter22_tmp_3_i_reg_973;
                ap_reg_pp0_iter24_or_cond3_i_reg_988 <= ap_reg_pp0_iter23_or_cond3_i_reg_988;
                ap_reg_pp0_iter24_tmp_16_i_reg_1030 <= ap_reg_pp0_iter23_tmp_16_i_reg_1030;
                ap_reg_pp0_iter24_tmp_3_i_reg_973 <= ap_reg_pp0_iter23_tmp_3_i_reg_973;
                ap_reg_pp0_iter25_or_cond3_i_reg_988 <= ap_reg_pp0_iter24_or_cond3_i_reg_988;
                ap_reg_pp0_iter25_tmp_16_i_reg_1030 <= ap_reg_pp0_iter24_tmp_16_i_reg_1030;
                ap_reg_pp0_iter25_tmp_28_i_reg_1080 <= tmp_28_i_reg_1080;
                ap_reg_pp0_iter25_tmp_3_i_reg_973 <= ap_reg_pp0_iter24_tmp_3_i_reg_973;
                ap_reg_pp0_iter26_or_cond3_i_reg_988 <= ap_reg_pp0_iter25_or_cond3_i_reg_988;
                ap_reg_pp0_iter26_tmp_28_i_reg_1080 <= ap_reg_pp0_iter25_tmp_28_i_reg_1080;
                ap_reg_pp0_iter2_or_cond3_i_reg_988 <= ap_reg_pp0_iter1_or_cond3_i_reg_988;
                ap_reg_pp0_iter2_tmp_3_i_reg_973 <= ap_reg_pp0_iter1_tmp_3_i_reg_973;
                ap_reg_pp0_iter3_or_cond3_i_reg_988 <= ap_reg_pp0_iter2_or_cond3_i_reg_988;
                ap_reg_pp0_iter3_pix_v_sobel_2_2_2_i_reg_1024 <= pix_v_sobel_2_2_2_i_reg_1024;
                ap_reg_pp0_iter3_tmp_16_i_reg_1030 <= tmp_16_i_reg_1030;
                ap_reg_pp0_iter3_tmp_3_i_reg_973 <= ap_reg_pp0_iter2_tmp_3_i_reg_973;
                ap_reg_pp0_iter4_or_cond3_i_reg_988 <= ap_reg_pp0_iter3_or_cond3_i_reg_988;
                ap_reg_pp0_iter4_tmp_16_i_reg_1030 <= ap_reg_pp0_iter3_tmp_16_i_reg_1030;
                ap_reg_pp0_iter4_tmp_3_i_reg_973 <= ap_reg_pp0_iter3_tmp_3_i_reg_973;
                ap_reg_pp0_iter5_or_cond3_i_reg_988 <= ap_reg_pp0_iter4_or_cond3_i_reg_988;
                ap_reg_pp0_iter5_tmp_16_i_reg_1030 <= ap_reg_pp0_iter4_tmp_16_i_reg_1030;
                ap_reg_pp0_iter5_tmp_3_i_reg_973 <= ap_reg_pp0_iter4_tmp_3_i_reg_973;
                ap_reg_pp0_iter6_or_cond3_i_reg_988 <= ap_reg_pp0_iter5_or_cond3_i_reg_988;
                ap_reg_pp0_iter6_tmp_16_i_reg_1030 <= ap_reg_pp0_iter5_tmp_16_i_reg_1030;
                ap_reg_pp0_iter6_tmp_3_i_reg_973 <= ap_reg_pp0_iter5_tmp_3_i_reg_973;
                ap_reg_pp0_iter7_or_cond3_i_reg_988 <= ap_reg_pp0_iter6_or_cond3_i_reg_988;
                ap_reg_pp0_iter7_tmp_16_i_reg_1030 <= ap_reg_pp0_iter6_tmp_16_i_reg_1030;
                ap_reg_pp0_iter7_tmp_3_i_reg_973 <= ap_reg_pp0_iter6_tmp_3_i_reg_973;
                ap_reg_pp0_iter8_or_cond3_i_reg_988 <= ap_reg_pp0_iter7_or_cond3_i_reg_988;
                ap_reg_pp0_iter8_tmp_16_i_reg_1030 <= ap_reg_pp0_iter7_tmp_16_i_reg_1030;
                ap_reg_pp0_iter8_tmp_3_i_reg_973 <= ap_reg_pp0_iter7_tmp_3_i_reg_973;
                ap_reg_pp0_iter9_or_cond3_i_reg_988 <= ap_reg_pp0_iter8_or_cond3_i_reg_988;
                ap_reg_pp0_iter9_tmp_16_i_reg_1030 <= ap_reg_pp0_iter8_tmp_16_i_reg_1030;
                ap_reg_pp0_iter9_tmp_3_i_reg_973 <= ap_reg_pp0_iter8_tmp_3_i_reg_973;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_or_cond3_i_reg_988 <= or_cond3_i_reg_988;
                ap_reg_pp0_iter1_tmp_3_i_reg_973 <= tmp_3_i_reg_973;
                tmp_3_i_reg_973 <= tmp_3_i_fu_326_p2;
                window_buf_2_1_2_reg_992 <= window_buf_2_1_1_fu_202;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_i_fu_326_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                line_buf_addr_reg_982 <= tmp_4_i_fu_338_p1(11 - 1 downto 0);
                or_cond3_i_reg_988 <= or_cond3_i_fu_371_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter22_tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_s_reg_1069 <= p_Val2_1_fu_629_p1(31 downto 31);
                p_Val2_3_reg_1074 <= p_Val2_3_fu_750_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                pix_h_sobel_2_1_1_i_reg_1008 <= pix_h_sobel_2_1_1_i_fu_460_p2;
                pix_v_sobel_2_1_2_i_reg_1013 <= pix_v_sobel_2_1_2_i_fu_488_p2;
                window_buf_1_2_reg_998 <= line_buf_q0(23 downto 16);
                window_buf_2_2_reg_1003 <= fifo2_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                pix_h_sobel_2_2_2_i_reg_1018 <= pix_h_sobel_2_2_2_i_fu_551_p2;
                pix_v_sobel_2_2_2_i_reg_1024 <= pix_v_sobel_2_2_2_i_fu_583_p2;
                tmp_16_i_reg_1030 <= tmp_16_i_fu_589_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_286_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp3_reg_968 <= tmp3_fu_320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_10_i_reg_1034 <= tmp_10_i_fu_910_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_12_i_reg_1049 <= grp_fu_916_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter23_or_cond3_i_reg_988 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_28_i_reg_1080 <= tmp_28_i_fu_789_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                window_buf_0_1_1_fu_186 <= line_buf_q0(15 downto 8);
                window_buf_0_1_fu_182 <= window_buf_0_1_1_fu_186;
                window_buf_1_1_1_fu_194 <= line_buf_q0(23 downto 16);
                window_buf_1_1_fu_190 <= window_buf_1_1_1_fu_194;
                window_buf_2_1_1_fu_202 <= fifo2_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                window_buf_2_1_fu_198 <= window_buf_2_1_2_reg_992;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter21_tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                x_assign_2_reg_1064 <= grp_fu_281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter9_tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                x_assign_reg_1059 <= grp_fu_278_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                yi_reg_963 <= yi_fu_292_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter27, tmp_i_fu_286_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter26)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_i_fu_286_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state31 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(fifo2_empty_n, fifo3_value_full_n, fifo3_grad_full_n, ap_enable_reg_pp0_iter1, tmp_3_i_reg_973, ap_enable_reg_pp0_iter27, ap_reg_pp0_iter26_or_cond3_i_reg_988)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (fifo3_grad_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (fifo3_value_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (fifo3_grad_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (fifo3_value_full_n = ap_const_logic_0)))) or ((tmp_3_i_reg_973 = ap_const_lv1_0) and (fifo2_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(fifo2_empty_n, fifo3_value_full_n, fifo3_grad_full_n, ap_enable_reg_pp0_iter1, tmp_3_i_reg_973, ap_enable_reg_pp0_iter27, ap_reg_pp0_iter26_or_cond3_i_reg_988)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (fifo3_grad_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (fifo3_value_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (fifo3_grad_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (fifo3_value_full_n = ap_const_logic_0)))) or ((tmp_3_i_reg_973 = ap_const_lv1_0) and (fifo2_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo2_empty_n, fifo3_value_full_n, fifo3_grad_full_n, ap_enable_reg_pp0_iter1, tmp_3_i_reg_973, ap_enable_reg_pp0_iter27, ap_reg_pp0_iter26_or_cond3_i_reg_988)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (fifo3_grad_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (fifo3_value_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (fifo3_grad_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (fifo3_value_full_n = ap_const_logic_0)))) or ((tmp_3_i_reg_973 = ap_const_lv1_0) and (fifo2_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state30_pp0_stage0_iter27_assign_proc : process(fifo3_value_full_n, fifo3_grad_full_n, ap_reg_pp0_iter26_or_cond3_i_reg_988)
    begin
                ap_block_state30_pp0_stage0_iter27 <= (((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (fifo3_grad_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (fifo3_value_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (fifo3_grad_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (fifo3_value_full_n = ap_const_logic_0)));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(fifo2_empty_n, tmp_3_i_reg_973)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((tmp_3_i_reg_973 = ap_const_lv1_0) and (fifo2_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, tmp_i_fu_286_p2, ap_CS_fsm_state2)
    begin
        if (((tmp_i_fu_286_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26)
    begin
        if (((ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_t_int1_i_reg_267 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    fifo2_blk_n_assign_proc : process(fifo2_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_3_i_reg_973)
    begin
        if (((tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo2_blk_n <= fifo2_empty_n;
        else 
            fifo2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo2_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_3_i_reg_973, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo2_read <= ap_const_logic_1;
        else 
            fifo2_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo3_grad_blk_n_assign_proc : process(fifo3_grad_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter27, ap_reg_pp0_iter26_or_cond3_i_reg_988)
    begin
        if ((((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1)))) then 
            fifo3_grad_blk_n <= fifo3_grad_full_n;
        else 
            fifo3_grad_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo3_grad_din <= 
        sel_tmp_cast_fu_887_p3 when (tmp_1_fu_895_p2(0) = '1') else 
        grad_sobel_i_fu_849_p3;

    fifo3_grad_write_assign_proc : process(ap_enable_reg_pp0_iter27, ap_reg_pp0_iter26_or_cond3_i_reg_988, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            fifo3_grad_write <= ap_const_logic_1;
        else 
            fifo3_grad_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo3_value_blk_n_assign_proc : process(fifo3_value_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter27, ap_reg_pp0_iter26_or_cond3_i_reg_988)
    begin
        if ((((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1)))) then 
            fifo3_value_blk_n <= fifo3_value_full_n;
        else 
            fifo3_value_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo3_value_din_assign_proc : process(ap_enable_reg_pp0_iter27, ap_reg_pp0_iter26_or_cond3_i_reg_988, ap_reg_pp0_iter26_tmp_28_i_reg_1080, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then
            if ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1)) then 
                fifo3_value_din <= ap_reg_pp0_iter26_tmp_28_i_reg_1080;
            elsif ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0)) then 
                fifo3_value_din <= ap_const_lv8_0;
            else 
                fifo3_value_din <= "XXXXXXXX";
            end if;
        else 
            fifo3_value_din <= "XXXXXXXX";
        end if; 
    end process;


    fifo3_value_write_assign_proc : process(ap_enable_reg_pp0_iter27, ap_reg_pp0_iter26_or_cond3_i_reg_988, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_reg_pp0_iter26_or_cond3_i_reg_988 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            fifo3_value_write <= ap_const_logic_1;
        else 
            fifo3_value_write <= ap_const_logic_0;
        end if; 
    end process;

    grad_sobel_i_fu_849_p3 <= 
        ap_const_lv2_1 when (or_cond9_i_fu_843_p2(0) = '1') else 
        ap_const_lv2_2;

    grp_fu_278_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_278_ce <= ap_const_logic_1;
        else 
            grp_fu_278_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_fu_278_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_i_reg_1049),32));


    grp_fu_281_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_281_ce <= ap_const_logic_1;
        else 
            grp_fu_281_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_616_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_616_ce <= ap_const_logic_1;
        else 
            grp_fu_616_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_fu_616_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_tr_i_fu_602_p3),20));

    grp_fu_916_p0 <= pix_v_sobel_2_2_2_ca_fu_622_p1(11 - 1 downto 0);
    grp_fu_916_p1 <= pix_v_sobel_2_2_2_ca_fu_622_p1(11 - 1 downto 0);
    icmp5_fu_779_p2 <= "1" when (signed(tmp_9_fu_769_p4) > signed(ap_const_lv24_0)) else "0";
    icmp8_fu_353_p2 <= "0" when (tmp_10_fu_343_p4 = ap_const_lv9_0) else "1";
    icmp_fu_308_p2 <= "0" when (tmp_2_fu_298_p4 = ap_const_lv8_0) else "1";

    internal_ap_ready_assign_proc : process(tmp_i_fu_286_p2, ap_CS_fsm_state2)
    begin
        if (((tmp_i_fu_286_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    isNeg_fu_678_p3 <= sh_assign_fu_672_p2(8 downto 8);
    line_buf_address0 <= tmp_4_i_fu_338_p1(11 - 1 downto 0);

    line_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buf_ce0 <= ap_const_logic_1;
        else 
            line_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buf_ce1 <= ap_const_logic_1;
        else 
            line_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buf_d1 <= (fifo2_dout & tmp_8_i_fu_411_p4);

    line_buf_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_3_i_reg_973, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_3_i_reg_973 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buf_we1 <= ap_const_logic_1;
        else 
            line_buf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    loc_V_1_fu_650_p1 <= p_Val2_1_fu_629_p1(23 - 1 downto 0);
    loc_V_fu_640_p4 <= p_Val2_1_fu_629_p1(30 downto 23);
    not_sel_tmp2_fu_881_p2 <= (sel_tmp2_fu_875_p2 xor ap_const_lv1_1);
    or_cond3_i_fu_371_p2 <= (tmp3_reg_968 and tmp2_fu_365_p2);
    or_cond9_i_fu_843_p2 <= (tmp_24_i_fu_837_p2 and tmp_23_i_fu_831_p2);
    or_cond_i_fu_813_p2 <= (tmp_20_i_fu_807_p2 and tmp_19_i_fu_801_p2);
    p_Val2_1_fu_629_p1 <= x_assign_2_reg_1064;
    p_Val2_3_fu_750_p3 <= 
        tmp_4_fu_736_p1 when (isNeg_fu_678_p3(0) = '1') else 
        tmp_5_fu_740_p4;
    p_Val2_6_i_i_i_i_fu_758_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_3_reg_1074));
    p_Val2_s_fu_763_p3 <= 
        p_Val2_6_i_i_i_i_fu_758_p2 when (p_Result_s_reg_1069(0) = '1') else 
        p_Val2_3_reg_1074;
    p_shl2_cast_i_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_i_fu_522_p3),11));
    p_shl2_i_fu_522_p3 <= (window_buf_1_2_reg_998 & ap_const_lv1_0);
    p_shl3_cast_i_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_i_fu_566_p3),11));
    p_shl3_i_fu_566_p3 <= (window_buf_2_1_2_reg_992 & ap_const_lv1_0);
        pix_h_sobel_2_0_2_ca_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pix_h_sobel_2_0_2_i_fu_438_p2),11));

    pix_h_sobel_2_0_2_i_fu_438_p2 <= std_logic_vector(unsigned(tmp_23_0_cast10_i_ca_fu_430_p1) - unsigned(tmp_23_0_2_cast9_i_c_fu_434_p1));
    pix_h_sobel_2_1_1_i_fu_460_p2 <= std_logic_vector(unsigned(tmp_24_1_cast_i_fu_456_p1) + unsigned(pix_h_sobel_2_0_2_ca_fu_444_p1));
    pix_h_sobel_2_1_2_i_fu_533_p2 <= std_logic_vector(unsigned(pix_h_sobel_2_1_1_i_reg_1008) - unsigned(p_shl2_cast_i_fu_529_p1));
    pix_h_sobel_2_2_1_i_fu_542_p2 <= std_logic_vector(unsigned(pix_h_sobel_2_1_2_i_fu_533_p2) + unsigned(tmp_23_2_cast_i_fu_538_p1));
        pix_h_sobel_2_2_2_ca_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pix_h_sobel_2_2_2_i_reg_1018),22));

    pix_h_sobel_2_2_2_i_fu_551_p2 <= std_logic_vector(unsigned(pix_h_sobel_2_2_1_i_fu_542_p2) - unsigned(tmp_23_2_2_cast_i_fu_548_p1));
    pix_v_sobel_2_1_2_ca_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pix_v_sobel_2_1_2_i_reg_1013),11));
    pix_v_sobel_2_1_2_i_fu_488_p2 <= std_logic_vector(unsigned(tmp_cast_fu_484_p1) + unsigned(tmp_30_0_1_cast_i_fu_474_p1));
    pix_v_sobel_2_2_1_i_fu_577_p2 <= std_logic_vector(unsigned(pix_v_sobel_2_2_i_fu_560_p2) - unsigned(p_shl3_cast_i_fu_573_p1));
        pix_v_sobel_2_2_2_ca_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_pix_v_sobel_2_2_2_i_reg_1024),22));

    pix_v_sobel_2_2_2_i_fu_583_p2 <= std_logic_vector(unsigned(pix_v_sobel_2_2_1_i_fu_577_p2) - unsigned(tmp_23_2_2_cast_i_fu_548_p1));
    pix_v_sobel_2_2_i_fu_560_p2 <= std_logic_vector(unsigned(pix_v_sobel_2_1_2_ca_fu_557_p1) - unsigned(tmp_23_2_cast_i_fu_538_p1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    sel_tmp1_demorgan_fu_857_p2 <= (tmp_20_i_fu_807_p2 and tmp_19_i_fu_801_p2);
    sel_tmp1_fu_863_p2 <= (sel_tmp1_demorgan_fu_857_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_875_p2 <= (tmp_21_i_fu_819_p2 and tmp1_fu_869_p2);
    sel_tmp_cast_fu_887_p3 <= 
        ap_const_lv2_3 when (not_sel_tmp2_fu_881_p2(0) = '1') else 
        ap_const_lv2_0;
    sh_assign_1_fu_696_p3 <= 
        tmp_80_i_i_i_cast_i_fu_692_p1 when (isNeg_fu_678_p3(0) = '1') else 
        sh_assign_fu_672_p2;
        sh_assign_1_i_i_i_ca_1_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_fu_696_p3),25));

        sh_assign_1_i_i_i_ca_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_fu_696_p3),32));

    sh_assign_fu_672_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i_cast_i_fu_668_p1));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

        t_int_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_616_p2),32));

    tmp1_fu_869_p2 <= (tmp_22_i_fu_825_p2 and sel_tmp1_fu_863_p2);
    tmp2_fu_365_p2 <= (tmp_26_i_fu_359_p2 and icmp8_fu_353_p2);
    tmp3_fu_320_p2 <= (tmp_2_i_fu_314_p2 and icmp_fu_308_p2);
    tmp_10_fu_343_p4 <= xi_i_reg_256(10 downto 2);
    tmp_10_i_fu_910_p0 <= pix_h_sobel_2_2_2_ca_fu_599_p1(11 - 1 downto 0);
    tmp_10_i_fu_910_p1 <= pix_h_sobel_2_2_2_ca_fu_599_p1(11 - 1 downto 0);
    tmp_11_fu_785_p1 <= p_Val2_s_fu_763_p3(8 - 1 downto 0);
    tmp_16_i_fu_589_p2 <= "1" when (pix_h_sobel_2_2_1_i_fu_542_p2 = tmp_23_2_2_cast_i_fu_548_p1) else "0";
    tmp_19_i_fu_801_p2 <= "1" when (signed(ap_phi_reg_pp0_iter27_t_int1_i_reg_267) > signed(ap_const_lv32_FFFFFD96)) else "0";
    tmp_1_fu_895_p2 <= (sel_tmp2_fu_875_p2 or or_cond_i_fu_813_p2);
    tmp_20_i_fu_807_p2 <= "1" when (signed(ap_phi_reg_pp0_iter27_t_int1_i_reg_267) < signed(ap_const_lv32_FFFFFF97)) else "0";
    tmp_21_i_fu_819_p2 <= "1" when (signed(ap_phi_reg_pp0_iter27_t_int1_i_reg_267) > signed(ap_const_lv32_FFFFFF96)) else "0";
    tmp_22_i_fu_825_p2 <= "1" when (signed(ap_phi_reg_pp0_iter27_t_int1_i_reg_267) < signed(ap_const_lv32_6B)) else "0";
    tmp_23_0_2_cast9_i_c_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_0_2_fu_391_p4),9));
    tmp_23_0_cast10_i_ca_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_0_1_fu_182),9));
    tmp_23_2_2_cast_i_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_2_2_reg_1003),11));
    tmp_23_2_cast_i_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_2_1_fu_198),11));
    tmp_23_i_fu_831_p2 <= "1" when (signed(ap_phi_reg_pp0_iter27_t_int1_i_reg_267) > signed(ap_const_lv32_6A)) else "0";
    tmp_24_1_cast_i_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_1_i_fu_448_p3),11));
    tmp_24_1_i_fu_448_p3 <= (window_buf_1_1_fu_190 & ap_const_lv1_0);
    tmp_24_i_fu_837_p2 <= "1" when (signed(ap_phi_reg_pp0_iter27_t_int1_i_reg_267) < signed(ap_const_lv32_26A)) else "0";
    tmp_25_tr_i_fu_602_p3 <= (pix_v_sobel_2_2_2_i_reg_1024 & ap_const_lv8_0);
    tmp_26_i_fu_359_p2 <= "1" when (unsigned(xi_i_reg_256) < unsigned(ap_const_lv11_4FD)) else "0";
    tmp_28_i_fu_789_p3 <= 
        ap_const_lv8_FF when (icmp5_fu_779_p2(0) = '1') else 
        tmp_11_fu_785_p1;
    tmp_2_fu_298_p4 <= yi_i_reg_245(9 downto 2);
    tmp_2_i_fu_314_p2 <= "1" when (unsigned(yi_i_reg_245) < unsigned(ap_const_lv10_2CD)) else "0";
    tmp_30_0_1_cast_i_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_0_1_i_fu_466_p3),10));
    tmp_30_0_1_i_fu_466_p3 <= (window_buf_0_1_1_fu_186 & ap_const_lv1_0);
    tmp_3_i_fu_326_p2 <= "1" when (xi_i_reg_256 = ap_const_lv11_500) else "0";
    tmp_4_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_728_p3),32));
    tmp_4_i_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xi_i_reg_256),64));
    tmp_5_fu_740_p4 <= tmp_83_i_i_i_i_fu_722_p2(55 downto 24);
    tmp_79_i_i_i_cast8_i_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_i_i_i_i_fu_654_p4),79));
    tmp_79_i_i_i_i_fu_654_p4 <= ((ap_const_lv1_1 & loc_V_1_fu_650_p1) & ap_const_lv1_0);
        tmp_80_i_i_i_cast_i_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_80_i_i_i_i_fu_686_p2),9));

    tmp_80_i_i_i_i_fu_686_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_fu_640_p4));
    tmp_81_i_i_i_i_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_1_i_i_i_ca_fu_704_p1),79));
    tmp_82_i_i_i_i_fu_716_p2 <= std_logic_vector(shift_right(unsigned(tmp_79_i_i_i_i_fu_654_p4),to_integer(unsigned('0' & sh_assign_1_i_i_i_ca_1_fu_708_p1(25-1 downto 0)))));
    tmp_83_i_i_i_i_fu_722_p2 <= std_logic_vector(shift_left(unsigned(tmp_79_i_i_i_cast8_i_fu_664_p1),to_integer(unsigned('0' & tmp_81_i_i_i_i_fu_712_p1(31-1 downto 0)))));
    tmp_8_fu_728_p3 <= tmp_82_i_i_i_i_fu_716_p2(24 downto 24);
    tmp_8_i_fu_411_p4 <= line_buf_q0(23 downto 8);
    tmp_9_fu_769_p4 <= p_Val2_s_fu_763_p3(31 downto 8);
    tmp_cast_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_478_p2),10));
    tmp_fu_478_p2 <= std_logic_vector(unsigned(tmp_23_0_cast10_i_ca_fu_430_p1) + unsigned(tmp_23_0_2_cast9_i_c_fu_434_p1));
    tmp_i_fu_286_p2 <= "1" when (yi_i_reg_245 = ap_const_lv10_2D0) else "0";
    tmp_i_i_i_i_cast_i_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_fu_640_p4),9));
    window_buf_0_2_fu_391_p4 <= line_buf_q0(15 downto 8);
    xi_fu_332_p2 <= std_logic_vector(unsigned(xi_i_reg_256) + unsigned(ap_const_lv11_1));
    yi_fu_292_p2 <= std_logic_vector(unsigned(yi_i_reg_245) + unsigned(ap_const_lv10_1));
end behav;
