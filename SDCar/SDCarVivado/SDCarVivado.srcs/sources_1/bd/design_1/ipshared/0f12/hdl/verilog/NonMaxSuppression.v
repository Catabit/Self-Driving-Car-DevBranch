// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module NonMaxSuppression (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        fifo3_value_dout,
        fifo3_value_empty_n,
        fifo3_value_read,
        fifo3_grad_dout,
        fifo3_grad_empty_n,
        fifo3_grad_read,
        fifo4_din,
        fifo4_full_n,
        fifo4_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] fifo3_value_dout;
input   fifo3_value_empty_n;
output   fifo3_value_read;
input  [1:0] fifo3_grad_dout;
input   fifo3_grad_empty_n;
output   fifo3_grad_read;
output  [7:0] fifo4_din;
input   fifo4_full_n;
output   fifo4_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg fifo3_value_read;
reg fifo3_grad_read;
reg fifo4_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    fifo3_value_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_31_i_reg_715;
reg    fifo3_grad_blk_n;
reg    fifo4_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] ap_reg_pp0_iter1_tmp_31_i_reg_715;
reg   [10:0] xi_i_reg_234;
wire   [0:0] tmp_i_fu_245_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] yi_fu_251_p2;
reg   [9:0] yi_reg_705;
wire   [0:0] tmp1_fu_279_p2;
reg   [0:0] tmp1_reg_710;
wire   [0:0] tmp_31_i_fu_285_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] xi_fu_291_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [10:0] line_buf_value_addr_reg_724;
reg   [10:0] line_buf_grad_addr_reg_730;
wire   [0:0] icmp3_fu_313_p2;
reg   [0:0] icmp3_reg_736;
reg   [0:0] ap_reg_pp0_iter1_icmp3_reg_736;
wire   [0:0] tmp_48_i_fu_319_p2;
reg   [0:0] tmp_48_i_reg_741;
reg   [0:0] ap_reg_pp0_iter1_tmp_48_i_reg_741;
reg   [7:0] window_buf_1_1_val_reg_746;
wire   [0:0] tmp_35_i_fu_414_p2;
reg   [0:0] tmp_35_i_reg_752;
wire   [0:0] tmp_37_i_fu_446_p2;
reg   [0:0] tmp_37_i_reg_757;
wire   [0:0] tmp_39_i_fu_452_p2;
reg   [0:0] tmp_39_i_reg_762;
wire   [0:0] tmp_41_i_fu_458_p2;
reg   [0:0] tmp_41_i_reg_767;
wire   [0:0] tmp_42_i_fu_470_p2;
reg   [0:0] tmp_42_i_reg_772;
wire   [0:0] tmp_45_i_fu_502_p2;
reg   [0:0] tmp_45_i_reg_777;
wire   [7:0] sel_tmp5_fu_534_p3;
reg   [7:0] sel_tmp5_reg_782;
wire   [0:0] sel_tmp1_fu_554_p2;
reg   [0:0] sel_tmp1_reg_787;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state4;
wire   [10:0] line_buf_value_address0;
reg    line_buf_value_ce0;
wire   [23:0] line_buf_value_q0;
reg    line_buf_value_ce1;
reg    line_buf_value_we1;
wire   [23:0] line_buf_value_d1;
wire   [10:0] line_buf_grad_address0;
reg    line_buf_grad_ce0;
wire   [5:0] line_buf_grad_q0;
reg    line_buf_grad_ce1;
reg    line_buf_grad_we1;
wire   [5:0] line_buf_grad_d1;
reg   [9:0] yi_i_reg_223;
reg    ap_block_state1;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_32_i_fu_297_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] window_buf_0_1_val_fu_140;
reg   [7:0] window_buf_0_1_val_1_fu_144;
wire   [7:0] window_buf_0_2_val_fu_346_p4;
reg   [7:0] value_nms_fu_148;
reg   [7:0] value_nms_1_fu_152;
wire   [7:0] window_buf_1_2_val_fu_356_p4;
reg   [7:0] window_buf_2_1_val_fu_156;
reg   [7:0] window_buf_2_1_val_1_fu_160;
reg   [1:0] grad_nms_fu_164;
wire   [7:0] tmp_12_fu_257_p4;
wire   [0:0] icmp_fu_267_p2;
wire   [0:0] tmp_30_i_fu_273_p2;
wire   [8:0] tmp_13_fu_303_p4;
wire   [15:0] tmp_21_i_fu_376_p4;
wire   [3:0] tmp_23_i_fu_395_p4;
wire   [0:0] tmp_36_i_fu_420_p2;
wire   [0:0] tmp_38_i_fu_426_p2;
wire   [0:0] or_cond_fu_432_p2;
wire   [0:0] tmp_43_i_fu_476_p2;
wire   [0:0] or_cond1_i_fu_482_p2;
wire   [0:0] sel_tmp2_demorgan_fu_508_p2;
wire   [0:0] tmp_40_i_fu_464_p2;
wire   [0:0] sel_tmp2_fu_514_p2;
wire   [0:0] sel_tmp3_fu_520_p2;
wire   [7:0] p_window_buf_value_lo_fu_488_p3;
wire   [7:0] p_window_buf_1_1_va_fu_438_p3;
wire   [7:0] sel_tmp4_fu_526_p3;
wire   [0:0] sel_tmp13_demorgan_fu_542_p2;
wire   [0:0] tmp_44_i_fu_496_p2;
wire   [0:0] sel_tmp_fu_548_p2;
wire   [0:0] or_cond1_fu_595_p2;
wire   [0:0] or_cond2_fu_606_p2;
wire   [0:0] sel_tmp6_fu_617_p2;
wire   [0:0] sel_tmp7_fu_622_p2;
wire   [7:0] p_window_buf_1_1_va_1_fu_599_p3;
wire   [7:0] p_window_buf_1_1_va_2_fu_610_p3;
wire   [7:0] sel_tmp8_fu_627_p3;
wire   [0:0] tmp_fu_641_p2;
wire   [0:0] or_cond5_i_fu_645_p2;
wire   [7:0] value_nms_7_i_fu_634_p3;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

Sobel_1280u_720u_fYi #(
    .DataWidth( 24 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
line_buf_value_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buf_value_address0),
    .ce0(line_buf_value_ce0),
    .q0(line_buf_value_q0),
    .address1(line_buf_value_addr_reg_724),
    .ce1(line_buf_value_ce1),
    .we1(line_buf_value_we1),
    .d1(line_buf_value_d1)
);

NonMaxSuppressionmb6 #(
    .DataWidth( 6 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
line_buf_grad_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buf_grad_address0),
    .ce0(line_buf_grad_ce0),
    .q0(line_buf_grad_q0),
    .address1(line_buf_grad_addr_reg_730),
    .ce1(line_buf_grad_ce1),
    .we1(line_buf_grad_we1),
    .d1(line_buf_grad_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((tmp_i_fu_245_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((tmp_31_i_fu_285_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_i_fu_245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((tmp_i_fu_245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_condition_pp0_exit_iter1_state4) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter1_state4) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((tmp_i_fu_245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_31_i_fu_285_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        xi_i_reg_234 <= xi_fu_291_p2;
    end else if (((tmp_i_fu_245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        xi_i_reg_234 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        yi_i_reg_223 <= yi_reg_705;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        yi_i_reg_223 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_icmp3_reg_736 <= icmp3_reg_736;
        ap_reg_pp0_iter1_tmp_31_i_reg_715 <= tmp_31_i_reg_715;
        ap_reg_pp0_iter1_tmp_48_i_reg_741 <= tmp_48_i_reg_741;
        tmp_31_i_reg_715 <= tmp_31_i_fu_285_p2;
        window_buf_1_1_val_reg_746 <= value_nms_1_fu_152;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_31_i_reg_715 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grad_nms_fu_164 <= {{line_buf_grad_q0[5:4]}};
        value_nms_1_fu_152 <= {{line_buf_value_q0[23:16]}};
        value_nms_fu_148 <= value_nms_1_fu_152;
        window_buf_0_1_val_1_fu_144 <= {{line_buf_value_q0[15:8]}};
        window_buf_0_1_val_fu_140 <= window_buf_0_1_val_1_fu_144;
        window_buf_2_1_val_1_fu_160 <= fifo3_value_dout;
        window_buf_2_1_val_fu_156 <= window_buf_2_1_val_1_fu_160;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_31_i_fu_285_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp3_reg_736 <= icmp3_fu_313_p2;
        line_buf_grad_addr_reg_730 <= tmp_32_i_fu_297_p1;
        line_buf_value_addr_reg_724 <= tmp_32_i_fu_297_p1;
        tmp_48_i_reg_741 <= tmp_48_i_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_31_i_reg_715 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sel_tmp1_reg_787 <= sel_tmp1_fu_554_p2;
        sel_tmp5_reg_782 <= sel_tmp5_fu_534_p3;
        tmp_35_i_reg_752 <= tmp_35_i_fu_414_p2;
        tmp_37_i_reg_757 <= tmp_37_i_fu_446_p2;
        tmp_39_i_reg_762 <= tmp_39_i_fu_452_p2;
        tmp_41_i_reg_767 <= tmp_41_i_fu_458_p2;
        tmp_42_i_reg_772 <= tmp_42_i_fu_470_p2;
        tmp_45_i_reg_777 <= tmp_45_i_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp1_reg_710 <= tmp1_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        yi_reg_705 <= yi_fu_251_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_fu_245_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_31_i_reg_715 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo3_grad_blk_n = fifo3_grad_empty_n;
    end else begin
        fifo3_grad_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_31_i_reg_715 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo3_grad_read = 1'b1;
    end else begin
        fifo3_grad_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_31_i_reg_715 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo3_value_blk_n = fifo3_value_empty_n;
    end else begin
        fifo3_value_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_31_i_reg_715 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo3_value_read = 1'b1;
    end else begin
        fifo3_value_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter1_tmp_31_i_reg_715 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fifo4_blk_n = fifo4_full_n;
    end else begin
        fifo4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter1_tmp_31_i_reg_715 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo4_write = 1'b1;
    end else begin
        fifo4_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_fu_245_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_grad_ce0 = 1'b1;
    end else begin
        line_buf_grad_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_grad_ce1 = 1'b1;
    end else begin
        line_buf_grad_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_31_i_reg_715 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_grad_we1 = 1'b1;
    end else begin
        line_buf_grad_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_value_ce0 = 1'b1;
    end else begin
        line_buf_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_value_ce1 = 1'b1;
    end else begin
        line_buf_value_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_31_i_reg_715 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_value_we1 = 1'b1;
    end else begin
        line_buf_value_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_i_fu_245_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter1_tmp_31_i_reg_715 == 1'd0) & (fifo4_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_31_i_reg_715 == 1'd0) & (fifo3_grad_empty_n == 1'b0)) | ((tmp_31_i_reg_715 == 1'd0) & (fifo3_value_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter1_tmp_31_i_reg_715 == 1'd0) & (fifo4_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_31_i_reg_715 == 1'd0) & (fifo3_grad_empty_n == 1'b0)) | ((tmp_31_i_reg_715 == 1'd0) & (fifo3_value_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter1_tmp_31_i_reg_715 == 1'd0) & (fifo4_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_31_i_reg_715 == 1'd0) & (fifo3_grad_empty_n == 1'b0)) | ((tmp_31_i_reg_715 == 1'd0) & (fifo3_value_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((tmp_31_i_reg_715 == 1'd0) & (fifo3_grad_empty_n == 1'b0)) | ((tmp_31_i_reg_715 == 1'd0) & (fifo3_value_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((ap_reg_pp0_iter1_tmp_31_i_reg_715 == 1'd0) & (fifo4_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign fifo4_din = ((or_cond5_i_fu_645_p2[0:0] === 1'b1) ? value_nms_7_i_fu_634_p3 : 8'd0);

assign icmp3_fu_313_p2 = ((tmp_13_fu_303_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_fu_267_p2 = ((tmp_12_fu_257_p4 != 8'd0) ? 1'b1 : 1'b0);

assign line_buf_grad_address0 = tmp_32_i_fu_297_p1;

assign line_buf_grad_d1 = {{fifo3_grad_dout}, {tmp_23_i_fu_395_p4}};

assign line_buf_value_address0 = tmp_32_i_fu_297_p1;

assign line_buf_value_d1 = {{fifo3_value_dout}, {tmp_21_i_fu_376_p4}};

assign or_cond1_fu_595_p2 = (tmp_41_i_reg_767 | tmp_39_i_reg_762);

assign or_cond1_i_fu_482_p2 = (tmp_43_i_fu_476_p2 | tmp_42_i_fu_470_p2);

assign or_cond2_fu_606_p2 = (tmp_45_i_reg_777 | tmp_42_i_reg_772);

assign or_cond5_i_fu_645_p2 = (tmp_fu_641_p2 & tmp1_reg_710);

assign or_cond_fu_432_p2 = (tmp_38_i_fu_426_p2 | tmp_36_i_fu_420_p2);

assign p_window_buf_1_1_va_1_fu_599_p3 = ((or_cond1_fu_595_p2[0:0] === 1'b1) ? 8'd0 : window_buf_1_1_val_reg_746);

assign p_window_buf_1_1_va_2_fu_610_p3 = ((or_cond2_fu_606_p2[0:0] === 1'b1) ? 8'd0 : window_buf_1_1_val_reg_746);

assign p_window_buf_1_1_va_fu_438_p3 = ((or_cond_fu_432_p2[0:0] === 1'b1) ? 8'd0 : value_nms_1_fu_152);

assign p_window_buf_value_lo_fu_488_p3 = ((or_cond1_i_fu_482_p2[0:0] === 1'b1) ? 8'd0 : value_nms_1_fu_152);

assign sel_tmp13_demorgan_fu_542_p2 = (tmp_40_i_fu_464_p2 | sel_tmp2_demorgan_fu_508_p2);

assign sel_tmp1_fu_554_p2 = (tmp_44_i_fu_496_p2 & sel_tmp_fu_548_p2);

assign sel_tmp2_demorgan_fu_508_p2 = (tmp_37_i_fu_446_p2 | tmp_35_i_fu_414_p2);

assign sel_tmp2_fu_514_p2 = (sel_tmp2_demorgan_fu_508_p2 ^ 1'd1);

assign sel_tmp3_fu_520_p2 = (tmp_40_i_fu_464_p2 & sel_tmp2_fu_514_p2);

assign sel_tmp4_fu_526_p3 = ((sel_tmp3_fu_520_p2[0:0] === 1'b1) ? p_window_buf_value_lo_fu_488_p3 : value_nms_1_fu_152);

assign sel_tmp5_fu_534_p3 = ((tmp_35_i_fu_414_p2[0:0] === 1'b1) ? p_window_buf_1_1_va_fu_438_p3 : sel_tmp4_fu_526_p3);

assign sel_tmp6_fu_617_p2 = (tmp_35_i_reg_752 ^ 1'd1);

assign sel_tmp7_fu_622_p2 = (tmp_37_i_reg_757 & sel_tmp6_fu_617_p2);

assign sel_tmp8_fu_627_p3 = ((sel_tmp7_fu_622_p2[0:0] === 1'b1) ? p_window_buf_1_1_va_1_fu_599_p3 : sel_tmp5_reg_782);

assign sel_tmp_fu_548_p2 = (sel_tmp13_demorgan_fu_542_p2 ^ 1'd1);

assign start_out = real_start;

assign tmp1_fu_279_p2 = (tmp_30_i_fu_273_p2 & icmp_fu_267_p2);

assign tmp_12_fu_257_p4 = {{yi_i_reg_223[9:2]}};

assign tmp_13_fu_303_p4 = {{xi_i_reg_234[10:2]}};

assign tmp_21_i_fu_376_p4 = {{line_buf_value_q0[23:8]}};

assign tmp_23_i_fu_395_p4 = {{line_buf_grad_q0[5:2]}};

assign tmp_30_i_fu_273_p2 = ((yi_i_reg_223 < 10'd717) ? 1'b1 : 1'b0);

assign tmp_31_i_fu_285_p2 = ((xi_i_reg_234 == 11'd1280) ? 1'b1 : 1'b0);

assign tmp_32_i_fu_297_p1 = xi_i_reg_234;

assign tmp_35_i_fu_414_p2 = ((grad_nms_fu_164 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_36_i_fu_420_p2 = ((value_nms_1_fu_152 < value_nms_fu_148) ? 1'b1 : 1'b0);

assign tmp_37_i_fu_446_p2 = ((grad_nms_fu_164 == 2'd1) ? 1'b1 : 1'b0);

assign tmp_38_i_fu_426_p2 = ((value_nms_1_fu_152 < window_buf_1_2_val_fu_356_p4) ? 1'b1 : 1'b0);

assign tmp_39_i_fu_452_p2 = ((value_nms_1_fu_152 < window_buf_0_1_val_fu_140) ? 1'b1 : 1'b0);

assign tmp_40_i_fu_464_p2 = ((grad_nms_fu_164 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_41_i_fu_458_p2 = ((value_nms_1_fu_152 < fifo3_value_dout) ? 1'b1 : 1'b0);

assign tmp_42_i_fu_470_p2 = ((value_nms_1_fu_152 < window_buf_0_2_val_fu_346_p4) ? 1'b1 : 1'b0);

assign tmp_43_i_fu_476_p2 = ((value_nms_1_fu_152 < window_buf_2_1_val_1_fu_160) ? 1'b1 : 1'b0);

assign tmp_44_i_fu_496_p2 = ((grad_nms_fu_164 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_45_i_fu_502_p2 = ((value_nms_1_fu_152 < window_buf_2_1_val_fu_156) ? 1'b1 : 1'b0);

assign tmp_48_i_fu_319_p2 = ((xi_i_reg_234 < 11'd1277) ? 1'b1 : 1'b0);

assign tmp_fu_641_p2 = (ap_reg_pp0_iter1_tmp_48_i_reg_741 & ap_reg_pp0_iter1_icmp3_reg_736);

assign tmp_i_fu_245_p2 = ((yi_i_reg_223 == 10'd720) ? 1'b1 : 1'b0);

assign value_nms_7_i_fu_634_p3 = ((sel_tmp1_reg_787[0:0] === 1'b1) ? p_window_buf_1_1_va_2_fu_610_p3 : sel_tmp8_fu_627_p3);

assign window_buf_0_2_val_fu_346_p4 = {{line_buf_value_q0[15:8]}};

assign window_buf_1_2_val_fu_356_p4 = {{line_buf_value_q0[23:16]}};

assign xi_fu_291_p2 = (xi_i_reg_234 + 11'd1);

assign yi_fu_251_p2 = (yi_i_reg_223 + 10'd1);

endmodule //NonMaxSuppression
