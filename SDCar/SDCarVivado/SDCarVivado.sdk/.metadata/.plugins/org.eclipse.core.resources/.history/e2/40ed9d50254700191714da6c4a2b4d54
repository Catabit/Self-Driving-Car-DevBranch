#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>
#include <poll.h>
#include <fcntl.h>
#include <errno.h>
#include <unistd.h>
#include <sys/mman.h>


#include <linux/ioctl.h>

#define MOTION_IOC_MAGIC  '9'

#define MOTION_IOCTSETENABLE    _IO(MOTION_IOC_MAGIC, 0)
#define MOTION_IOCTSETDIR	_IO(MOTION_IOC_MAGIC, 1)

#define MOTION_IOC_MAXNR 1

#define SERVO_LEFT 220
#define SERVO_RIGHT 380
#define SERVO_CENTER (SERVO_LEFT + (SERVO_RIGHT-SERVO_LEFT)/2)

#define SERVO_TEST


int main(int argc, char *argv[]) {
	if (argc<2){
		printf("Usage: motion option: 0=motors, 1=steering\n");
		return 0;
	}

	int motors, servo;

	motors = open("/dev/motors", O_WRONLY);
	if (motors < 1) {
		fprintf(stderr,"Can't open motors.\n");
		return -1;
	}

	servo = open("/dev/servo", O_WRONLY);
	if (servo < 1) {
		fprintf(stderr,"Can't open servo.\n");
		return -1;
	}


	unsigned int enable = 1;
	unsigned int leftDir = 1;
	unsigned int rightDir = 1;

	unsigned short leftSpeed = 0;
	unsigned short rightSpeed = 0;

	unsigned option = strtoul(argv[1],NULL,0); //0 for motors, 1 for steering
	ioctl(motors, MOTION_IOCTSETENABLE, enable);

	if (option==0){ // motion 0 dir speed time
		if (argc<5){
			printf("Usage:motion 0 dir speed time\n");
			printf("Speed is u16 [0, 65535]. Time is in us.\n");
		}else{
			leftDir = strtoul(argv[2],NULL,0);
			rightDir=leftDir;

			leftSpeed = strtoul(argv[3],NULL,0);
			rightSpeed = leftSpeed;

			int sleeptime = strtoul(argv[4],NULL,0);


			unsigned int speed = (leftSpeed<<16)+rightSpeed;
			write(motors, &speed, 4);
			ioctl(motors, MOTION_IOCTSETDIR, ((leftDir&1)<<1)+(rightDir&1));


			*((unsigned *)(ptr + CONTROL_REG_OFFSET)) = (leftDir<<2) + (rightDir<<1) + enable;
			usleep(sleeptime);
			//*((unsigned *)(ptr + CONTROL_REG_OFFSET)) = 0;
			*((unsigned *)(ptr + MOTOR_REG_OFFSET)) = 0;
		}
	} else if(option==1){ // motion 1 position
		if (argc<3){
			printf("Usage:motion 1 position\n");
			printf("Servo limits are [%d, %d]\n", SERVOLEFT, SERVORIGHT);
		}else{
			unsigned newServo = strtoul(argv[2],NULL,0);
			if (newServo<SERVOLEFT)
				newServo = SERVOLEFT+5;
			else if(newServo > SERVORIGHT)
				newServo = SERVORIGHT-5;

			*((unsigned *)(ptr + SERVO_REG_OFFSET)) = newServo;
			*((unsigned *)(ptr + CONTROL_REG_OFFSET)) = (leftDir<<2) + (rightDir<<1) + enable;
			usleep(100000);
			//*((unsigned *)(ptr + CONTROL_REG_OFFSET)) = 0;
			*((unsigned *)(ptr + MOTOR_REG_OFFSET)) = 0;
			}
	}

	munmap(ptr, CUSTOM_IP_MAP_SIZE);
	return 0;
}





